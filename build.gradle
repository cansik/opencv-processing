plugins {
    id 'java-library'
    id 'org.bytedeco.gradle-javacpp-platform' version "1.5.10"
}

group 'gab.opencv'
version '0.8.0'

def javaCvVersion = '1.5.10'

// We can set this on the command line too this way: -PjavacppPlatform=linux-x86_64,macosx-x86_64,windows-x86_64,etc
ext {
    javacppPlatform = 'linux-x86_64,macosx-x86_64,macosx-arm64,windows-x86_64,linux-armhf,linux-arm64' // defaults to Loader.getPlatform()
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    jar.archiveName = outputName + '.jar'
}

javadoc {
    source = sourceSets.main.allJava
}

dependencies {
    // compile
    testImplementation group: 'junit', name: 'junit', version: '4.13.1'

    // opencv
    implementation group: 'org.bytedeco', name: 'opencv-platform', version: "4.9.0-$javaCvVersion"
    implementation group: 'org.bytedeco', name: 'openblas-platform', version: "0.3.26-$javaCvVersion"

    // processing
    implementation fileTree(include: ["core.jar", "jogl-all-main.jar", "gluegen-rt-main.jar"], dir: 'core-libs')
}

task fatJar(type: Jar) {
    archiveFileName = "$outputName-complete.jar"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    dependsOn configurations.runtimeClasspath
    from {
        (configurations.runtimeClasspath).filter( {! (it.name =~ /core.jar/ ||
                it.name =~ /jogl-all-main.jar/ ||
                it.name =~ /gluegen-rt-main.jar/)}).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    with jar
}

// add processing library support
apply from: "processing-library.gradle"